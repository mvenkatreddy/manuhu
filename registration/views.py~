from django.contrib.auth import authenticate, login, logout
from django.shortcuts import redirect
from django.core.urlresolvers import reverse
from django.contrib.auth.models import User

from django.http import HttpResponseRedirect

from django.contrib import messages
from django.shortcuts import render

from .forms import RegistrationForm


def registrationuser(request):
    """ Creating a registration """
    user_form = RegistrationForm()
    if request.method == 'POST':
        user_form = RegistrationForm(request.POST)
        if user_form.is_valid():
            obj = user_form.save(commit=False)
            email = obj.email_id
            password = obj.password
            user = User.objects.create_user(email=email,
                                            username=email, password=password)
            user.save()
            user = authenticate(username=email, password=password)
            login(request, user)
            messages.success(request, 'You are successfully registered')
    context = {'user_form': user_form}
    return render(request, 'registration/user_registration.html', context)


def accounts_signin(request):
    """ Implementing Sigin In Functionality """
    if request.method == 'POST':
        username = request.POST.get('username')
        password = request.POST.get('password')
        user = authenticate(username=username, password=password)
        if user is not None:
            if user.is_active:
                login(request, user)
                messages.success(request, 'You are successfully Logged In')
            else:
                messages.error(request, 'Invalid login credentials')
                return HttpResponseRedirect(reverse('accounts_login'))
    return HttpResponseRedirect(reverse('home'))


def accounts_login(request):
    """ Creating an accounts login"""
    context = {}
    return render(request, 'registration/account_login.html', context)


def accounts_logout(request):
    """ Logout the users  """
    logout(request)
    messages.success(request, 'You are successfully logout')
    return redirect('home')

def export_to_excel(request,email_id):
    ''' Display the profile of the usere'''
    try:
        pf = Registration.objects.get(pk=email_id)
    except Poll.DoesNotExist:
        raise Http404
    return render(request, 'registration/profile.html', {'pf': pf})
    
